{"version":3,"sources":["Components/Navbar/NavbarCpnts/Favorites.js","Components/Navbar/NavbarCpnts/SearchForm.js","Components/Fetch/Fetch.js","Components/Body/HomePage.js","Components/Body/Search/MoreInfo/MoreInfo.js","Components/Navbar/Navbar.js","Components/Body/Search/CitySearched.js","Components/LocalStorage/LocalStorage.js","App.js","reportWebVitals.js","index.js"],"names":["FavExpand","props","className","onClick","countryArray","countryCodes","selectedCountry","selectedCountryCode","cityState","CustomToggle","React","forwardRef","ref","children","id","e","preventDefault","CustomMenu","style","labeledBy","useState","value","setValue","aria-labelledby","Form","Control","autoFocus","placeholder","onChange","target","Children","toArray","filter","child","toLowerCase","startsWith","toUpperCase","SearchArea","state","countrychoice","this","setState","type","Dropdown","Toggle","as","Menu","map","countries","Item","innerText","setCountryName","pos","indexOf","GetCountryCode","Component","FetchJson","url","fetch","then","response","json","catch","error","console","log","HomeBody","Container","fluid","Row","Col","xs","MoreInfo","jsonFormat","jsonFormat2","d","dayOf","Date","getDay","classNamed","Math","round","daily","temp","morn","day","night","weather","description","highLow","humidity","wind_speed","SearchedBody","todayPressed","setTodayPressed","day1Pressed","setDay1Pressed","day2Pressed","setDay2Pressed","day3Pressed","setDay3Pressed","day4Pressed","setDay4Pressed","day5Pressed","setDay5Pressed","addToFav","setAddToFav","favClickable","setFavClickable","currentFavs","favoritesArr","setFavoritesArr","weatherImgPt1","weatherImgPt2","weatherImgPt3","weatherImgDesc","sixDays","favoritedCity","trim","WeatherCard","date","img","highLowTemp","imgDesc","onClickFunction","Card","Header","Body","src","alt","Text","days","DayBuilder","icon","useEffect","favArr","includes","localStorage","setItem","JSON","stringify","main","Button","disabled","getDate","month","getMonth","year","getFullYear","dateBuilder","md","lg","xl","Navbar","lat","lon","getItem","parse","clicked","setClicked","setResponse","setError","background","setBackground","lgShow","setLgShow","FirstAPI","a","cod","coord","SecondAPI","setTimeout","Modal","size","show","onHide","Title","favorites","HomePage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b86ef0f.chunk.js","sourcesContent":["import { IoExpandOutline } from 'react-icons/io5';\r\nimport './NavCpnts.css';\r\n\r\nconst FavExpand = (props) => {\r\n\r\n    return (\r\n        <div>\r\n        <h1 className=\"favoritesPosition fontStyling\" onClick={props.onClick}><IoExpandOutline className=\"mt-1\"/> Favorites </h1>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default FavExpand;","import { TiArrowSortedDown } from 'react-icons/ti';\r\nimport { Form, Dropdown } from 'react-bootstrap';\r\nimport React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './NavCpnts.css';\r\n\r\n\r\n\r\nconst countryArray = [\"Afghanistan\", \"Albania\", \"Algeria\", \"Andorra\", \"Angola\", \"Antigua and Barbuda\", \"Argentina\", \"Armenia\", \"Australia\", \"Austria\", \"Azerbaijan\", \"The Bahamas\", \"Bahrain\", \"Bangladesh\", \"Barbados\", \"Belarus\", \"Belgium\", \"Belize\", \"Benin\", \"Bhutan\", \"Bolivia\", \"Bosnia and Herzegovina\", \"Botswana\", \"Brazil\", \"Brunei\", \"Bulgaria\", \"Burkina Faso\", \"Burundi\", \"Cabo Verde\", \"Cambodia\", \"Cameroon\", \"Canada\", \"Central African Republic\", \"Chad\", \"Chile\", \"China\", \"Colombia\", \"Comoros\", \"Congo\", \"Costa Rica\", \"Cote d’Ivoire\", \"Croatia\", \"Cuba\", \"Cyprus\", \"Czechia\", \"Democratic Republic of the Congo\", \"Democratic People's Republic of Korea\", \"Denmark\", \"Djibouti\", \"Dominica\", \"Dominican Republic\", \"Ecuador\", \"Egypt\", \"El Salvador\", \"Equatorial Guinea\", \"Eritrea\", \"Estonia\", \"Eswatini\", \"Ethiopia\", \"Fiji\", \"Finland\", \"France\", \"Gabon\", \"Gambia\", \"Georgia\", \"Germany\", \"Ghana\", \"Greece\", \"Grenada\", \"Guatemala\", \"Guinea\", \"Guinea-Bissau\", \"Guyana\", \"Haiti\", \"The Holy See\", \"Honduras\", \"Hungary\", \"Iceland\", \"India\", \"Indonesia\", \"Iran\", \"Iraq\", \"Ireland\", \"Israel\", \"Italy\", \"Jamaica\", \"Japan\", \"Jordan\", \"Kazakhstan\", \"Kenya\", \"Kiribati\", \"Kuwait\", \"Kyrgyzstan\", \"Laos\", \"Latvia\", \"Lebanon\", \"Lesotho\", \"Liberia\", \"Libya\", \"Liechtenstein\", \"Lithuania\", \"Luxembourg\", \"Madagascar\", \"Malawi\", \"Malaysia\", \"Maldives\", \"Mali\", \"Malta\", \"Marshall Islands\", \"Mauritania\", \"Mauritius\", \"Mexico\", \"Micronesia\", \"Moldova\", \"Monaco\", \"Mongolia\", \"Montenegro\", \"Morocco\", \"Mozambique\", \"Myanmar\", \"Namibia\", \"Nauru\", \"Nepal\", \"The Netherlands\", \"New Zealand\", \"Nicaragua\", \"Niger\", \"Nigeria\", \"North Macedonia\", \"Norway\", \"Oman\", \"Pakistan\", \"Palau\", \"Panama\", \"Papua New Guinea\", \"Paraguay\", \"Peru\", \"Philippines\", \"Poland\", \"Portugal\", \"Qatar\", \"Republic of Korea\", \"Romania\", \"Russia\", \"Rwanda\", \"Saint Kitts and Nevis\", \"Saint Lucia\", \"Samoa\", \"San Marino\", \"Sao Tome and Principe\", \"Saudi Arabia\", \"Senegal\", \"Serbia\", \"Seychelles\", \"Sierra Leone\", \"Singapore\", \"Slovakia\", \"Slovenia\", \"The Solomon Islands\", \"Somalia\", \"South Africa\", \"South Sudan\", \"Spain\", \"Sri Lanka\", \"Sudan\", \"St. Vincent & Grenadines\", \"State of Palestine\", \"Suriname\", \"Sweden\", \"Switzerland\", \"Syria\", \"Tajikistan\", \"Tanzania\", \"Thailand\", \"Timor-Leste\", \"Togo\", \"Tonga\", \"Trinidad and Tobago\", \"Tunisia\", \"Turkey\", \"Turkmenistan\", \"Tuvalu\", \"Uganda\", \"Ukraine\", \"The United Arab Emirates\", \"The United Kingdom\", \"United States\", \"Uruguay\", \"Uzbekistan\", \"Vanuatu\", \"Venezuela\", \"Vietnam\", \"Yemen\", \"Zambia\", \"Zimbabwe\"];\r\n\r\nconst countryCodes = [\"AF\", \"AL\", \"DZ\", \"AD\", \"AO\", \"AG\", \"AR\", \"AM\", \"AU\", \"AT\", \"AZ\", \"BS\", \"BH\", \"BD\", \"BB\", \"BY\", \"BE\", \"BZ\", \"BJ\", \"BT\", \"BO\", \"BA\", \"BW\", \"BR\", \"BN\", \"BG\", \"BF\", \"BI\", \"CV\", \"KH\", \"CM\", \"CA\", \"CF\", \"TD\", \"CL\", \"CN\", \"CO\", \"KM\", \"CG\", \"CR\", \"CI\", \"HR\", \"CU\", \"CY\", \"CZ\", \"CD\", \"KP\", \"DK\", \"DJ\", \"DM\", \"DO\", \"EC\", \"EG\", \"SV\", \"GQ\", \"ER\", \"EE\", \"SZ\", \"ET\", \"FJ\", \"FI\", \"FR\", \"GA\", \"GM\", \"GE\", \"DE\", \"GH\", \"GR\", \"GD\", \"GT\", \"GN\", \"GW\", \"GY\", \"HT\", \"VA\", \"HN\", \"HU\", \"IS\", \"IN\", \"ID\", \"IR\", \"IQ\", \"IE\", \"IL\", \"IT\", \"JM\", \"JP\", \"JE\", \"KZ\", \"KE\", \"KI\", \"KW\", \"KG\", \"LA\", \"LV\", \"LB\", \"LS\", \"LR\", \"LY\", \"LI\", \"LT\", \"LU\", \"MG\", \"MW\", \"MY\", \"MV\", \"ML\", \"MT\", \"MH\", \"MR\", \"MU\", \"MX\", \"FM\", \"MD\", \"MC\", \"MN\", \"ME\", \"MA\", \"MZ\", \"MM\", \"NA\", \"NR\", \"NP\", \"NL\", \"NZ\", \"NI\", \"NE\", \"NG\", \"MK\", \"NO\", \"OM\", \"PK\", \"PW\", \"PA\", \"PG\", \"PY\", \"PE\", \"PH\", \"PL\", \"PT\", \"QA\", \"KR\", \"RO\", \"RU\", \"RW\", \"KN\", \"LC\", \"WS\", \"SM\", \"ST\", \"SA\", \"SN\", \"RS\", \"SC\", \"SL\", \"SG\", \"SK\", \"SI\", \"SB\", \"SO\", \"ZA\", \"SS\", \"ES\", \"LK\", \"SD\", \"VC\", \"PS\", \"SR\", \"SE\", \"CH\", \"SY\", \"TJ\", \"TZ\", \"TH\", \"TL\", \"TG\", \"TO\", \"TT\", \"TN\", \"TR\", \"TM\", \"TV\", \"UG\", \"UA\", \"AE\", \"GB\", \"US\", \"UY\", \"UZ\", \"VU\", \"VE\", \"VN\", \"YE\", \"ZM\", \"ZW\"];\r\nlet selectedCountry = \"\";\r\nlet selectedCountryCode = \"\";\r\nlet cityState = \"\";\r\n\r\nfunction GetCountryCode() {\r\n    let pos = countryArray.indexOf(selectedCountry);\r\n    selectedCountryCode = countryCodes[pos];\r\n}\r\n\r\n\r\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n    <button\r\n        className=\"dropdownSize\"\r\n        ref={ref}\r\n        id=\"countriesDropdown\"\r\n        onClick={(e) => {\r\n            e.preventDefault();\r\n            onClick(e);\r\n            //console.log(e);\r\n        }}\r\n    >\r\n        {children}\r\n        <TiArrowSortedDown />\r\n\r\n\r\n    </button>\r\n));\r\n\r\nconst CustomMenu = React.forwardRef(\r\n    ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n        const [value, setValue] = useState('');\r\n\r\n        return (\r\n            <div\r\n                ref={ref}\r\n                style={style}\r\n                className={className}\r\n                aria-labelledby={labeledBy}\r\n\r\n            >\r\n                <Form.Control\r\n                    autoFocus\r\n                    className=\"mx-3 my-2 w-auto\"\r\n                    placeholder=\"Type to filter...\"\r\n                    onChange={(e) => setValue(e.target.value)}\r\n                    value={value}\r\n\r\n                />\r\n                <ul className=\"list-unstyled\">\r\n                    {React.Children.toArray(children).filter(\r\n                        (child) =>\r\n                            !value || child.props.children.toLowerCase().startsWith(value) || child.props.children.toUpperCase().startsWith(value) || child.props.children.startsWith(value)\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n);\r\n\r\nclass SearchArea extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            countrychoice: \"Choose a Country\",\r\n        }\r\n        \r\n    }\r\n    setCountryName() {\r\n        this.setState({ countrychoice: selectedCountry })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"removeAllSpacing\">\r\n                    <Form.Control className=\"formSize form \" type=\"text\" placeholder=\"  Enter &quot;City,State&quot;\" id=\"form\"\r\n                        onChange={(e) => {\r\n                            e.preventDefault();\r\n                            cityState = e.target.value;\r\n                        }} />\r\n                </div>\r\n                <div className=\"removeAllSpacing\">\r\n                    <Dropdown id=\"dropdown\" className=\"dropdownFont2\">\r\n                        <Dropdown.Toggle as={CustomToggle} >\r\n                            {this.state.countrychoice}\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu as={CustomMenu} className=\"dropdown-menu \">\r\n\r\n                            {countryArray.map((countries) => {\r\n                                return <Dropdown.Item\r\n                                    key={countries}\r\n                                    className=\"dropdownFont\"\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        selectedCountry = e.target.innerText;\r\n                                        this.setCountryName();\r\n                                        GetCountryCode();\r\n                                    }}\r\n                                >\r\n                                    {countries}\r\n                                </Dropdown.Item>\r\n                            })}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport { SearchArea, selectedCountryCode, cityState };","\r\nfunction FetchJson(url) {\r\n    return fetch(url).then(\r\n        response => response.json()\r\n    ).catch(\r\n        error => console.log(error)\r\n    )\r\n}\r\n    export { FetchJson }","import React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport './Body.css'\r\nimport App from '../../App';\r\n//Going through and settig up our title component with multiple items\r\nfunction HomeBody() {\r\n    return (\r\n        <Container fluid className=\"bodyBG removeAllSpacing\">\r\n            <Row>\r\n                <Col xs={12} className=\"d-flex justify-content-center removeAllSpacing\">\r\n                    <h1 className=\"white mr-2 mt-4\">A one stop Weather App Shop!</h1>\r\n                </Col>\r\n                <Col xs={12} className=\"d-flex justify-content-center removeAllSpacing\">\r\n                    <h1 className=\"white mt-4\">Start searching to find any place's geographical weather!</h1>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\nexport default HomeBody;","import React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { selectedCountryCode, cityState } from '../../../Navbar/NavbarCpnts/SearchForm'\r\nimport { jsonFormat2 } from '../../../Navbar/Navbar'\r\nimport { highLow } from '../CitySearched'\r\nimport { Link } from \"react-router-dom\";\r\nimport '../Searched.css'\r\n\r\n\r\nfunction MoreInfo(props) {\r\n\r\n    const dateBuilder = (d) => {\r\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n        let day = days[d.getDay()];\r\n        let date = d.getDate();\r\n        let month = months[d.getMonth()];\r\n        let year = d.getFullYear();\r\n\r\n        return `${day}, ${month} ${date}, ${year}`\r\n    }\r\n\r\n    function DayBuilder(d, dayOf) {\r\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        let chosenDate = days[(d.getDay() + dayOf) % 7]\r\n        return chosenDate\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"pt-3 moreInfoSpacing\">\r\n            <Row>\r\n                <Col xs={12} className=\"d-flex justify-content-center mb-3\">\r\n                    <h2 className=\"moreInfoForecastFont mb-3\">Forecast for {DayBuilder(new Date(), props)} </h2>\r\n                </Col>\r\n                <Col xs={4} classNamed=\"d-flex justify-content-end \">\r\n                    <h3 className=\"moreInfoFontStyle\">Morning Temp</h3>\r\n                </Col>\r\n                <Col xs={4}>\r\n                    <h3 className=\"moreInfoFontStyle d-flex justify-content-center\">Noon Temp</h3>\r\n                </Col>\r\n                <Col xs={4}>\r\n                    <h3 className=\"moreInfoFontStyle d-flex justify-content-center\">Evening Temp</h3>\r\n                </Col>\r\n                <Col xs={4} classNamed=\"d-flex justify-content-center \">\r\n                    <h3 className=\"moreInfoFontStyle\">{Math.round(jsonFormat2.daily[props].temp.morn)}°F</h3>\r\n                </Col>\r\n                <Col xs={4}>\r\n                    <h3 className=\"moreInfoFontStyle d-flex justify-content-center\">{Math.round(jsonFormat2.daily[props].temp.day)}°F</h3>\r\n                </Col>\r\n                <Col xs={4}>\r\n                    <h3 className=\"moreInfoFontStyle d-flex justify-content-center\">{Math.round(jsonFormat2.daily[props].temp.night)}°F</h3>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mt-5\">\r\n\r\n                <Col xs={6} className=\"d-flex justify-content-center mb-3 \">\r\n                    <h2 className=\"moreInfoFontStyle\">General Weather Forecast: {jsonFormat2.daily[props].weather[0].description.toUpperCase()} </h2>\r\n                </Col>\r\n                <Col xs={6} className=\"d-flex justify-content-center mb-3 \">\r\n                    <h2 className=\"moreInfoFontStyle\">The Highs and Lows: {highLow[props]} </h2>\r\n                </Col>\r\n                <Col xs={6} className=\"d-flex justify-content-center \">\r\n                    <h2 className=\"moreInfoFontStyle\">Humidity: {jsonFormat2.daily[props].humidity}% </h2>\r\n                </Col>\r\n                <Col xs={6} className=\"d-flex justify-content-center \">\r\n                    <h2 className=\"moreInfoFontStyle\">Wind Speed: {Math.round(jsonFormat2.daily[props].wind_speed)} mph</h2>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default MoreInfo;","import { FaSearchLocation } from 'react-icons/fa'\r\nimport { Col, Container, Row, Modal } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './Navbar.css'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Favs from './NavbarCpnts/Favorites'\r\nimport { SearchArea, selectedCountryCode, cityState } from './NavbarCpnts/SearchForm'\r\nimport { FetchJson } from '../Fetch/Fetch';\r\nimport HomePage from '../Body/HomePage'\r\nimport { SearchedBody } from '../Body/Search/CitySearched'\r\n\r\nlet jsonFormat;\r\nlet jsonFormat2;\r\nlet response = null;\r\nlet currentFavs = [];\r\n\r\n\r\nconst Navbar = () => {\r\n    if (localStorage.getItem('SavedCities')) {\r\n        currentFavs = JSON.parse(localStorage.getItem('SavedCities'))\r\n    } else {\r\n        currentFavs = [];\r\n    }\r\n\r\n    let lat;\r\n    let lon;\r\n    const [clicked, setClicked] = useState(false);\r\n    const [response, setResponse] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [background, setBackground] = useState(\"starterBG\")\r\n    const [lgShow, setLgShow] = useState(false);\r\n\r\n\r\n\r\n    const FirstAPI = async () => {\r\n        jsonFormat = await FetchJson(`https://api.openweathermap.org/data/2.5/weather?q=${cityState},${selectedCountryCode}&units=imperial&appid=64c32382d7f20134fba026b769bba586`);\r\n        if (jsonFormat.cod === \"404\" || cityState == \"\") {\r\n            setResponse(false);\r\n\r\n            setError(true);\r\n        } else {\r\n\r\n            console.log(jsonFormat);\r\n            lat = jsonFormat.coord.lat;\r\n            lon = jsonFormat.coord.lon;\r\n            SecondAPI();\r\n            setTimeout(() => {\r\n                setBackground(jsonFormat.weather[0].main)\r\n                if (background === \"Drizle\") {\r\n                    background = \"Rain\"\r\n                }\r\n                setResponse(true)\r\n            }, 1300)\r\n        }\r\n    }\r\n\r\n    function CreateModalFavLi() {\r\n        return (\r\n            <>\r\n                {currentFavs.map(favorites =>\r\n                (\r\n                    <li key={favorites} className=\"listStyling\" >\r\n                        {favorites}\r\n                    </li>\r\n                )\r\n                )}\r\n            </>\r\n        )\r\n\r\n    }\r\n\r\n    function CreateModalFavs() {\r\n        return (\r\n            <ul className=\"removeDot\">\r\n                {CreateModalFavLi()}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const SecondAPI = async () => {\r\n        jsonFormat2 = await FetchJson(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=minutely,alerts&units=imperial&appid=64c32382d7f20134fba026b769bba586`);\r\n        console.log(jsonFormat2)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (clicked === true) {\r\n            setResponse(false);\r\n            FirstAPI();\r\n            setClicked(false);\r\n            if (error === true) {\r\n                setError(false);\r\n            }\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                size=\"lg\"\r\n                show={lgShow}\r\n                onHide={() => setLgShow(false)}\r\n                aria-labelledby=\"example-modal-sizes-title-lg\"\r\n\r\n            >\r\n                <Modal.Header className=\"d-flex justify-content-center favoriteModalTitle\">\r\n                    <Modal.Title id=\"example-modal-sizes-title-lg\" >\r\n                        Your List of Favorited Cities:\r\n          </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"favoriteModalBody\">\r\n                    <Row>\r\n                        <Col>\r\n                            {CreateModalFavs()}\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Modal.Body>\r\n            </Modal>\r\n            <Container fluid className={`${background} removeAllSpacing`}>\r\n                <Row className=\"navBG\">\r\n                    <Col xs={2} className=\"d-flex justify-content-center align-items-center\">\r\n                        <Favs onClick={() => setLgShow(true)} />\r\n                    </Col>\r\n\r\n                    <Col xs={7} className=\"d-flex justify-content-center align-items-center title \">\r\n                        <h1>React Weather App</h1>\r\n                    </Col>\r\n                    <Col xs={3} className=\" d-flex justify-content-end align-items-center\" >\r\n                        <button className=\"searchIconBG buttonSize\" onClick={() => { setClicked(true) }}>\r\n                            <FaSearchLocation className=\"searchIconSize\" />\r\n                        </button>\r\n                        <SearchArea />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} className={error ? \"d-flex justify-content-center \" : \"d-none\"}>\r\n                        <h2 className=\"d-flex justify-content-center white\"> The city you searched for was not found</h2>\r\n                    </Col>\r\n                </Row>\r\n                {response ? <SearchedBody /> : <HomePage />}\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { Navbar, jsonFormat, jsonFormat2, response, currentFavs }","import React, { useState, useEffect } from 'react';\r\nimport { Col, Container, Row, Button, Card } from 'react-bootstrap';\r\nimport { selectedCountryCode, cityState } from '../../Navbar/NavbarCpnts/SearchForm';\r\nimport { jsonFormat, jsonFormat2, currentFavs } from '../../Navbar/Navbar';\r\nimport {setToLS} from '../../LocalStorage/LocalStorage'\r\nimport { ImPlus } from 'react-icons/im';\r\nimport MoreInfo from './MoreInfo/MoreInfo'\r\nimport './Searched.css'\r\nlet highLow = [];\r\n\r\nfunction SearchedBody() {\r\n    const [todayPressed, setTodayPressed] = useState(false);\r\n    const [day1Pressed, setDay1Pressed] = useState(false);\r\n    const [day2Pressed, setDay2Pressed] = useState(false);\r\n    const [day3Pressed, setDay3Pressed] = useState(false);\r\n    const [day4Pressed, setDay4Pressed] = useState(false);\r\n    const [day5Pressed, setDay5Pressed] = useState(false);\r\n    const [addToFav, setAddToFav] = useState(false);\r\n    const [favClickable, setFavClickable] = useState(false);\r\n    const [favoritesArr, setFavoritesArr] = useState(currentFavs);\r\n\r\n    \r\n\r\n    const weatherImgPt1 = \"http://openweathermap.org/img/wn/\";\r\n    let weatherImgPt2 = [];\r\n    const weatherImgPt3 = \"@2x.png\";\r\n    let weatherImgDesc = [];\r\n    let sixDays = [];\r\n    let favoritedCity = `${cityState.trim()} ${selectedCountryCode}`\r\n\r\n    const dateBuilder = (d) => {\r\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        let day = days[d.getDay()];\r\n        let date = d.getDate();\r\n        let month = months[d.getMonth()];\r\n        let year = d.getFullYear();\r\n\r\n        return `${day}, ${month} ${date}, ${year}`\r\n    }\r\n\r\n    function DayBuilder(d) {\r\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        sixDays =\r\n            [days[d.getDay()],\r\n            days[(d.getDay() + 1) % 7],\r\n            days[(d.getDay() + 2) % 7],\r\n            days[(d.getDay() + 3) % 7],\r\n            days[(d.getDay() + 4) % 7],\r\n            days[(d.getDay() + 5) % 7]]\r\n\r\n    }\r\n\r\n    function ImgBuilder() {\r\n        weatherImgPt2 =\r\n            [jsonFormat2.daily[0].weather[0].icon,\r\n            jsonFormat2.daily[1].weather[0].icon,\r\n            jsonFormat2.daily[2].weather[0].icon,\r\n            jsonFormat2.daily[3].weather[0].icon,\r\n            jsonFormat2.daily[4].weather[0].icon,\r\n            jsonFormat2.daily[5].weather[0].icon]\r\n\r\n    }\r\n\r\n    function ImgDescription() {\r\n        weatherImgDesc =\r\n            [`An image of ${jsonFormat2.daily[0].weather[0].description}`,\r\n            `An image of ${jsonFormat2.daily[1].weather[0].description}`,\r\n            `An image of ${jsonFormat2.daily[2].weather[0].description}`,\r\n            `An image of ${jsonFormat2.daily[3].weather[0].description}`,\r\n            `An image of ${jsonFormat2.daily[4].weather[0].description}`,\r\n            `An image of ${jsonFormat2.daily[5].weather[0].description}`]\r\n    }\r\n    function HighLowBuilder() {\r\n        highLow =\r\n            [`${Math.round(jsonFormat2.daily[0].temp.day)}°F/${Math.round(jsonFormat2.daily[0].temp.night)}°F`,\r\n            `${Math.round(jsonFormat2.daily[1].temp.day)}°F/${Math.round(jsonFormat2.daily[1].temp.night)}°F`,\r\n            `${Math.round(jsonFormat2.daily[2].temp.day)}°F/${Math.round(jsonFormat2.daily[2].temp.night)}°F`,\r\n            `${Math.round(jsonFormat2.daily[3].temp.day)}°F/${Math.round(jsonFormat2.daily[3].temp.night)}°F`,\r\n            `${Math.round(jsonFormat2.daily[4].temp.day)}°F/${Math.round(jsonFormat2.daily[4].temp.night)}°F`,\r\n            `${Math.round(jsonFormat2.daily[5].temp.day)}°F/${Math.round(jsonFormat2.daily[5].temp.night)}°F`]\r\n    }\r\n\r\n    const getData = () => {\r\n        DayBuilder(new Date());\r\n        ImgBuilder();\r\n        ImgDescription();\r\n        HighLowBuilder();\r\n    }\r\n\r\n    const WeatherCard = (date, img, highLowTemp, imgDesc, onClickFunction) => {\r\n        return (\r\n            <Card className=\"mr-3 cardSize cardBG \" onClick={onClickFunction}>\r\n                <Card.Header as=\"h5\" className=\"dayFont d-flex justify-content-center\">{date}</Card.Header>\r\n                <Card.Body>\r\n                    <img\r\n                        className=\" whiteImg \"\r\n                        src={img}\r\n                        alt={imgDesc}\r\n                    />\r\n                    <Card.Text className=\"tempFont ml-2 d-flex justify-content-center mt-3\">\r\n                        {highLowTemp}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n    \r\n    getData();\r\n\r\n    function todayClick() {\r\n        setTodayPressed(!todayPressed)\r\n        setDay1Pressed(false)\r\n        setDay2Pressed(false)\r\n        setDay3Pressed(false)\r\n        setDay4Pressed(false)\r\n        setDay5Pressed(false)\r\n    }\r\n    function day1Click() {\r\n        setDay1Pressed(!day1Pressed)\r\n        setTodayPressed(false)\r\n        setDay2Pressed(false)\r\n        setDay3Pressed(false)\r\n        setDay4Pressed(false)\r\n        setDay5Pressed(false)\r\n    }\r\n    function day2Click() {\r\n        setDay2Pressed(!day2Pressed)\r\n        setTodayPressed(false)\r\n        setDay1Pressed(false)\r\n        setDay3Pressed(false)\r\n        setDay4Pressed(false)\r\n        setDay5Pressed(false)\r\n    }\r\n    function day3Click() {\r\n        setDay3Pressed(!day3Pressed)\r\n        setTodayPressed(false)\r\n        setDay1Pressed(false)\r\n        setDay2Pressed(false)\r\n        setDay4Pressed(false)\r\n        setDay5Pressed(false)\r\n    }\r\n    function day4Click() {\r\n        setDay4Pressed(!day4Pressed)\r\n        setTodayPressed(false)\r\n        setDay1Pressed(false)\r\n        setDay2Pressed(false)\r\n        setDay3Pressed(false)\r\n        setDay5Pressed(false)\r\n    }\r\n    function day5Click() {\r\n        setDay5Pressed(!day5Pressed)\r\n        setTodayPressed(false)\r\n        setDay1Pressed(false)\r\n        setDay2Pressed(false)\r\n        setDay3Pressed(false)\r\n        setDay4Pressed(false)\r\n    }\r\n\r\n    const addingCity = () => {\r\n        setFavoritesArr(favoritesArr => [...favoritesArr, favoritedCity ]);\r\n        setFavClickable(false)\r\n        setAddToFav(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (favoritesArr.includes(favoritedCity)) {\r\n            setFavClickable(false)\r\n        } else {\r\n            setFavClickable(true)\r\n        }\r\n\r\n        if (addToFav) {\r\n            setToLS(favoritesArr);\r\n            setAddToFav(false);\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Container fluid className=\"pt-5 backgroundLayer\">\r\n            <Row>\r\n                <Col xs={2} className=\"d-flex justify-content-end \">\r\n                    <h3 className=\"TempSize\"> {Math.round(jsonFormat.main.temp)}°F </h3>\r\n                </Col>\r\n\r\n                <Col xs={7} className=\"d-flex justify-content-end white CityTitle\">\r\n                    <h2 className=\"ml-5 stateFont align-content-start\"> {cityState} {selectedCountryCode}</h2>\r\n                    {favClickable ?\r\n                        <Button className=\"ml-3 buttonPad \"\r\n                            onClick={() => { addingCity() }}\r\n                        >\r\n                            <ImPlus /> Add to Favorites\r\n                        </Button>\r\n                        :\r\n                        <Button className=\"ml-5 buttonPad\" disabled>\r\n                            Added!\r\n                        </Button>\r\n                    }\r\n                </Col>\r\n\r\n                <Col xs={3} className=\"d-flex justify-content-start white \">\r\n                    <h3 className=\"date\"> {dateBuilder(new Date())} </h3>\r\n                </Col>\r\n            </Row>\r\n            <Container className=\"mt-5\">\r\n                <Row>\r\n\r\n                    <Col xs={12} className=\"d-flex justify-content-center \">\r\n                        <h3 className=\"descriptionSize \"> Current weather: {jsonFormat.weather[0].description.toUpperCase()} </h3>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n            {todayPressed ? MoreInfo(0) : \"\"}\r\n            {day1Pressed ? MoreInfo(1) : \"\"}\r\n            {day2Pressed ? MoreInfo(2) : \"\"}\r\n            {day3Pressed ? MoreInfo(3) : \"\"}\r\n            {day4Pressed ? MoreInfo(4) : \"\"}\r\n            {day5Pressed ? MoreInfo(5) : \"\"}\r\n            <Row className=\"cardPositionInfo\">\r\n                <Col className=\"d-flex justify-content-center mb-2\">\r\n                    <h4 className=\"cardPositionInfoTxt\">Click on a card for more info</h4>\r\n                </Col>\r\n            </Row>\r\n            <Row >\r\n                <Col md={6} lg={4} xl={2} >\r\n\r\n                    {WeatherCard(sixDays[0], weatherImgPt1 + weatherImgPt2[0] + weatherImgPt3, highLow[0], weatherImgDesc[0], todayClick)}\r\n\r\n                </Col>\r\n                <Col md={6} lg={4} xl={2}>\r\n\r\n                    {WeatherCard(sixDays[1], weatherImgPt1 + weatherImgPt2[1] + weatherImgPt3, highLow[1], weatherImgDesc[1], day1Click)}\r\n\r\n                </Col>\r\n                <Col md={6} lg={4} xl={2}>\r\n\r\n                    {WeatherCard(sixDays[2], weatherImgPt1 + weatherImgPt2[2] + weatherImgPt3, highLow[2], weatherImgDesc[2], day2Click)}\r\n\r\n                </Col>\r\n                <Col md={6} lg={4} xl={2}>\r\n\r\n                    {WeatherCard(sixDays[3], weatherImgPt1 + weatherImgPt2[3] + weatherImgPt3, highLow[3], weatherImgDesc[3], day3Click)}\r\n\r\n                </Col>\r\n                <Col md={6} lg={4} xl={2}>\r\n\r\n                    {WeatherCard(sixDays[4], weatherImgPt1 + weatherImgPt2[4] + weatherImgPt3, highLow[4], weatherImgDesc[4], day4Click)}\r\n\r\n                </Col>\r\n                <Col md={6} lg={4} xl={2}>\r\n\r\n                    {WeatherCard(sixDays[5], weatherImgPt1 + weatherImgPt2[5] + weatherImgPt3, highLow[5], weatherImgDesc[5], day5Click)}\r\n\r\n                </Col>\r\n            </Row>\r\n        </Container >\r\n    )\r\n\r\n}\r\n\r\nexport { SearchedBody, highLow };","function setToLS(favArr) {\r\n    localStorage.setItem('SavedCities', JSON.stringify(favArr));\r\n}\r\n\r\nexport {setToLS}","import './App.css';\nimport React, { useEffect} from 'react';\nimport { Navbar } from './Components/Navbar/Navbar';\nimport { jsonFormat, response, background } from './Components/Navbar/Navbar'\n\n\nfunction App() {\n\n  return (\n    \n      <div>\n        <Navbar />\n      </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}